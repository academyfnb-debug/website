import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { CheckCircle, Clock, BookOpen, Trophy, ArrowRight, Users, TrendingUp, Star, Award, Target, Filter } from "lucide-react";
import learningPathsHero from "@/assets/learning-paths-hero.jpg";
import level1Entry from "@/assets/level-1-entry.jpg";
import level2Technician from "@/assets/level-2-technician.jpg";
import level3Management from "@/assets/level-3-management.jpg";
import level4Leadership from "@/assets/level-4-leadership.jpg";

export const LearningPathsSection = () => {
  const learningPaths = [
    {
      id: "level1",
      level: "C·∫§P ƒê·ªò 1",
      title: "KH·ªûI ƒê·∫¶U NGH·ªÄ (ENTRY LEVEL)",
      subtitle: "Ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu / Sinh vi√™n / Chuy·ªÉn ngh·ªÅ",
      description: "L√†m quen ng√†nh F&B, h·ªçc ngh·ªÅ c∆° b·∫£n v√† k·ªπ nƒÉng d·ªãch v·ª•",
      image: level1Entry,
      duration: "3-5 bu·ªïi",
      priceRange: "990.000 - 4.500.000 VNƒê",
      courses: [
        { name: "Gi·ªõi thi·ªáu ng√†nh F&B", duration: "1 ng√†y (6h)", price: "990.000", description: "L√†m quen ng√†nh, vƒÉn h√≥a ngh·ªÅ" },
        { name: "Barista Basic", duration: "5 bu·ªïi", price: "3.500.000", description: "Espresso, Latte Art c∆° b·∫£n" },
        { name: "Bartender Basic", duration: "5 bu·ªïi", price: "3.800.000", description: "Cocktail c∆° b·∫£n, k·ªπ thu·∫≠t l·∫Øc" },
        { name: "B·∫øp √Å/√Çu c∆° b·∫£n", duration: "3-5 bu·ªïi", price: "2.800.000 - 4.500.000", description: "K·ªπ thu·∫≠t n·∫•u n∆∞·ªõng cƒÉn b·∫£n" },
        { name: "K·ªπ nƒÉng d·ªãch v·ª•", duration: "2 bu·ªïi", price: "1.500.000", description: "Ph·ª•c v·ª• b√†n, x·ª≠ l√Ω kh√°ch h√†ng" }
      ],
      skills: ["K·ªπ nƒÉng c∆° b·∫£n", "V·ªá sinh HACCP", "Customer Service", "Teamwork"],
      outcomes: ["Hi·ªÉu bi·∫øt c∆° b·∫£n v·ªÅ ng√†nh F&B", "K·ªπ nƒÉng ph·ª•c v·ª• kh√°ch h√†ng", "Ch·ª©ng ch·ªâ Entry Level"],
      color: "green",
      icon: Star
    },
    {
      id: "level2",
      level: "C·∫§P ƒê·ªò 2", 
      title: "CHUY√äN VI√äN / K·ª∏ THU·∫¨T VI√äN",
      subtitle: "ƒê√£ c√≥ kinh nghi·ªám, mu·ªën l√†m chuy√™n s√¢u",
      description: "N√¢ng cao k·ªπ nƒÉng tay ngh·ªÅ v√† qu·∫£n l√Ω k·ªπ thu·∫≠t",
      image: level2Technician,
      duration: "5-15 bu·ªïi",
      priceRange: "3.800.000 - 7.800.000 VNƒê",
      courses: [
        { name: "Barista Pro", duration: "7 bu·ªïi", price: "5.200.000", description: "M√°y xay, calibration, latte art n√¢ng cao" },
        { name: "Bartender Pro", duration: "8 bu·ªïi", price: "6.500.000", description: "Classic & Signature Mixology" },
        { name: "B·∫øp Fusion", duration: "8 bu·ªïi", price: "7.000.000", description: "K·∫øt h·ª£p √Å - √Çu - Local modern" },
        { name: "Qu·∫£n l√Ω k·ªπ thu·∫≠t", duration: "3 bu·ªïi", price: "3.800.000", description: "Setup menu, ki·ªÉm so√°t ch·∫•t l∆∞·ª£ng" },
        { name: "Chu·∫©n qu·ªëc t·∫ø (SCA, WSET)", duration: "5-15 bu·ªïi", price: "Li√™n h·ªá", description: "Ch·ª©ng ch·ªâ qu·ªëc t·∫ø" }
      ],
      skills: ["Advanced Techniques", "Quality Control", "Menu Development", "International Standards"],
      outcomes: ["Th√†nh th·∫°o k·ªπ thu·∫≠t chuy√™n s√¢u", "Ch·ª©ng ch·ªâ qu·ªëc t·∫ø", "L√†m vi·ªác t·∫°i chu·ªói l·ªõn"],
      color: "blue",
      icon: Award
    },
    {
      id: "level3",
      level: "C·∫§P ƒê·ªò 3",
      title: "QU·∫¢N L√ù V·∫¨N H√ÄNH",
      subtitle: "Tr∆∞·ªüng ca - Gi√°m s√°t - Ch·ªß qu√°n nh·ªè",
      description: "Qu·∫£n l√Ω v·∫≠n h√†nh, setup qu√°n v√† k·ªπ nƒÉng l√£nh ƒë·∫°o",
      image: level3Management,
      duration: "4-10 bu·ªïi",
      priceRange: "4.200.000 - 9.500.000 VNƒê",
      courses: [
        { name: "Qu·∫£n l√Ω v·∫≠n h√†nh", duration: "8-10 bu·ªïi", price: "6.800.000 - 9.500.000", description: "Chi ph√≠, nh√¢n s·ª±, quy tr√¨nh SOP" },
        { name: "Setup qu√°n t·ª´ A-Z", duration: "6 bu·ªïi", price: "5.200.000", description: "Concept, m·∫∑t b·∫±ng, menu design" },
        { name: "K·ªπ nƒÉng l√£nh ƒë·∫°o", duration: "4 bu·ªïi", price: "4.200.000", description: "Qu·∫£n l√Ω nh√≥m, x·ª≠ l√Ω kh·ªßng ho·∫£ng" }
      ],
      skills: ["Team Management", "Cost Control", "Operations", "Leadership", "SOP Development"],
      outcomes: ["Qu·∫£n l√Ω hi·ªáu qu·∫£", "Setup qu√°n th√†nh c√¥ng", "Ch·ª©ng ch·ªâ Manager"],
      color: "orange",
      icon: Users
    },
    {
      id: "level4",
      level: "C·∫§P ƒê·ªò 4+",
      title: "L√ÉNH ƒê·∫†O - CHI·∫æN L∆Ø·ª¢C",
      subtitle: "Ch·ªß chu·ªói - CEO - Nh√† ƒë·∫ßu t∆∞ F&B",
      description: "CEO F&B, g·ªçi v·ªën nh∆∞·ª£ng quy·ªÅn v√† qu·∫£n tr·ªã chi·∫øn l∆∞·ª£c",
      image: level4Leadership,
      duration: "5-12 bu·ªïi",
      priceRange: "8.500.000 - 15.000.000 VNƒê",
      courses: [
        { name: "CEO F&B", duration: "12 bu·ªïi", price: "15.000.000", description: "Chi·∫øn l∆∞·ª£c t√†i ch√≠nh, nh√¢n s·ª±, th∆∞∆°ng hi·ªáu" },
        { name: "G·ªçi v·ªën & Nh∆∞·ª£ng quy·ªÅn", duration: "8 bu·ªïi", price: "9.800.000", description: "L·∫≠p h·ªì s∆°, m√¥ h√¨nh franchise" },
        { name: "Qu·∫£n tr·ªã chi·∫øn l∆∞·ª£c", duration: "5 bu·ªïi", price: "9.800.000", description: "KPIs, Balanced Scorecard" },
        { name: "T∆∞ v·∫•n 1:1", duration: "Theo gi·ªù", price: "1.000.000 - 3.000.000/gi·ªù", description: "Ki·ªÉm to√°n m√¥ h√¨nh th·ª±c t·∫ø" }
      ],
      skills: ["Strategic Planning", "Financial Management", "Franchise Development", "Investment"],
      outcomes: ["X√¢y d·ª±ng h·ªá th·ªëng", "G·ªçi v·ªën th√†nh c√¥ng", "Ph√°t tri·ªÉn chu·ªói"],
      color: "purple",
      icon: Trophy
    }
  ];

  const getColorClasses = (color: string) => {
    switch (color) {
      case "green":
        return {
          badge: "bg-green-100 text-green-800",
          card: "border-green-200 hover:border-green-300",
          icon: "bg-green-500",
          button: "bg-green-600 hover:bg-green-700"
        };
      case "blue":
        return {
          badge: "bg-blue-100 text-blue-800", 
          card: "border-blue-200 hover:border-blue-300",
          icon: "bg-blue-500",
          button: "bg-blue-600 hover:bg-blue-700"
        };
      case "purple":
        return {
          badge: "bg-purple-100 text-purple-800",
          card: "border-purple-200 hover:border-purple-300", 
          icon: "bg-purple-500",
          button: "bg-purple-600 hover:bg-purple-700"
        };
      default:
        return {
          badge: "bg-gray-100 text-gray-800",
          card: "border-gray-200 hover:border-gray-300",
          icon: "bg-gray-500", 
          button: "bg-gray-600 hover:bg-gray-700"
        };
    }
  };

  return (
    <section className="py-16 bg-background">
      <div className="container px-4 md:px-6">
        {/* Hero Section */}
        <div className="relative mb-16 rounded-2xl overflow-hidden">
          <img 
            src={learningPathsHero} 
            alt="F&B Learning Paths" 
            className="w-full h-[400px] object-cover"
          />
          <div className="absolute inset-0 bg-black/50 flex items-center justify-center">
            <div className="text-center text-white">
              <h1 className="text-4xl md:text-5xl font-bold mb-4">
                üìç L·ªò TR√åNH H·ªåC CHU·∫®N QU·ªêC T·∫æ
              </h1>
              <p className="text-xl md:text-2xl mb-6 max-w-4xl">
                N·ªÅn t·∫£ng ƒë√†o t·∫°o theo ti√™u chu·∫©n ngh·ªÅ F&B to√†n c·∫ßu - t·ª´ Level 1 ƒë·∫øn Level 4+
              </p>
              <div className="flex flex-wrap gap-4 justify-center">
                <div className="bg-white/20 px-4 py-2 rounded-full backdrop-blur-sm">
                  <span className="font-medium">üéØ C√° nh√¢n h√≥a l·ªô tr√¨nh</span>
                </div>
                <div className="bg-white/20 px-4 py-2 rounded-full backdrop-blur-sm">
                  <span className="font-medium">üß∞ T√≠ch h·ª£p AI Tracker</span>
                </div>
                <div className="bg-white/20 px-4 py-2 rounded-full backdrop-blur-sm">
                  <span className="font-medium">üé® Gamification</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Features Bar */}
        <div className="grid md:grid-cols-4 gap-4 mb-12">
          <div className="text-center p-4 bg-card rounded-lg border">
            <Filter className="w-8 h-8 mx-auto mb-2 text-primary" />
            <h3 className="font-medium mb-1">B·ªô l·ªçc th√¥ng minh</h3>
            <p className="text-sm text-muted-foreground">Ch·ªçn theo m·ª•c ti√™u & ng√¢n s√°ch</p>
          </div>
          <div className="text-center p-4 bg-card rounded-lg border">
            <Target className="w-8 h-8 mx-auto mb-2 text-primary" />
            <h3 className="font-medium mb-1">AI G·ª£i √Ω c√° nh√¢n</h3>
            <p className="text-sm text-muted-foreground">T∆∞ v·∫•n l·ªô tr√¨nh ph√π h·ª£p</p>
          </div>
          <div className="text-center p-4 bg-card rounded-lg border">
            <Trophy className="w-8 h-8 mx-auto mb-2 text-primary" />
            <h3 className="font-medium mb-1">Huy hi·ªáu & Ch·ª©ng ch·ªâ</h3>
            <p className="text-sm text-muted-foreground">QR x√°c th·ª±c qu·ªëc t·∫ø</p>
          </div>
          <div className="text-center p-4 bg-card rounded-lg border">
            <TrendingUp className="w-8 h-8 mx-auto mb-2 text-primary" />
            <h3 className="font-medium mb-1">Tracking ti·∫øn ƒë·ªô</h3>
            <p className="text-sm text-muted-foreground">Theo d√µi th√†nh t√≠ch h·ªçc t·∫≠p</p>
          </div>
        </div>

        {/* Learning Paths Timeline */}
        <div className="space-y-8 mb-12">
          {learningPaths.map((path, index) => {
            const colors = getColorClasses(path.color);
            const IconComponent = path.icon;
            
            return (
              <div key={path.id} className="relative">
                {/* Timeline Line */}
                {index < learningPaths.length - 1 && (
                  <div className="absolute left-8 top-24 w-0.5 h-32 bg-border hidden md:block"></div>
                )}
                
                <Card className={`${colors.card} transition-all duration-300 hover:shadow-lg`}>
                  <div className="grid md:grid-cols-3 gap-6">
                    {/* Left: Image & Level Info */}
                    <div className="relative">
                      <img 
                        src={path.image} 
                        alt={path.title}
                        className="w-full h-48 md:h-full object-cover rounded-l-lg"
                      />
                      <div className="absolute top-4 left-4">
                        <div className={`flex items-center gap-2 bg-white/90 backdrop-blur-sm px-3 py-1 rounded-full`}>
                          <IconComponent className={`w-4 h-4 ${colors.icon.replace('bg-', 'text-')}`} />
                          <span className="font-bold text-sm">{path.level}</span>
                        </div>
                      </div>
                    </div>

                    {/* Middle: Content */}
                    <div className="md:col-span-2 p-6">
                      <div className="mb-4">
                        <h3 className="text-2xl font-bold mb-2">{path.title}</h3>
                        <p className="text-muted-foreground mb-2">{path.subtitle}</p>
                        <p className="text-sm">{path.description}</p>
                      </div>

                      {/* Course List */}
                      <div className="mb-6">
                        <h4 className="font-medium mb-3">üìö Kh√≥a h·ªçc trong c·∫•p ƒë·ªô:</h4>
                        <div className="grid sm:grid-cols-2 gap-3">
                          {path.courses.map((course, idx) => (
                            <div key={idx} className="p-3 bg-muted/50 rounded-lg border">
                              <div className="flex justify-between items-start mb-1">
                                <h5 className="font-medium text-sm">{course.name}</h5>
                                <Badge variant="outline" className="text-xs">{course.price}</Badge>
                              </div>
                              <p className="text-xs text-muted-foreground mb-1">{course.description}</p>
                              <div className="flex items-center gap-2 text-xs text-muted-foreground">
                                <Clock className="w-3 h-3" />
                                {course.duration}
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* Skills & Outcomes */}
                      <div className="grid sm:grid-cols-2 gap-4 mb-6">
                        <div>
                          <h4 className="font-medium text-sm mb-2">üéØ K·ªπ nƒÉng ƒë·∫°t ƒë∆∞·ª£c:</h4>
                          <div className="flex flex-wrap gap-1">
                            {path.skills.map((skill) => (
                              <Badge key={skill} variant="secondary" className="text-xs">
                                {skill}
                              </Badge>
                            ))}
                          </div>
                        </div>
                        <div>
                          <h4 className="font-medium text-sm mb-2">‚úÖ K·∫øt qu·∫£:</h4>
                          <ul className="space-y-1">
                            {path.outcomes.map((outcome) => (
                              <li key={outcome} className="flex items-start gap-2 text-xs text-muted-foreground">
                                <CheckCircle className="w-3 h-3 text-green-500 mt-0.5 flex-shrink-0" />
                                {outcome}
                              </li>
                            ))}
                          </ul>
                        </div>
                      </div>

                      {/* Price & CTA */}
                      <div className="flex flex-wrap items-center justify-between gap-4">
                        <div>
                          <div className="text-sm text-muted-foreground">H·ªçc ph√≠ t·ª´</div>
                          <div className="text-xl font-bold text-primary">{path.priceRange}</div>
                        </div>
                        <div className="flex gap-2">
                          <Button variant="outline" size="sm">
                            Xem chi ti·∫øt
                          </Button>
                          <Button className={colors.button} size="sm">
                            B·∫Øt ƒë·∫ßu h·ªçc
                            <ArrowRight className="ml-1 w-4 h-4" />
                          </Button>
                        </div>
                      </div>
                    </div>
                  </div>
                </Card>
              </div>
            );
          })}
        </div>

        {/* Career Path Suggestions */}
        <div className="bg-gradient-to-br from-primary/5 to-secondary/5 rounded-2xl p-8 mb-12">
          <h3 className="text-2xl font-bold text-center mb-6">üß≠ G·ª¢I √ù L·ªò TR√åNH PH√ÅT TRI·ªÇN THEO M·ª§C TI√äU</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
            {[
              { goal: "üëâ H·ªçc ngh·ªÅ ƒëi l√†m", path: "Level 1 ‚Üí Level 2 ‚Üí Level 3 Qu·∫£n l√Ω" },
              { goal: "üëâ M·ªü qu√°n nh·ªè", path: "Level 1 Setup ‚Üí Barista/Tr√† s·ªØa ‚Üí Level 3 V·∫≠n h√†nh" },
              { goal: "üëâ L√†m t·∫°i chu·ªói l·ªõn", path: "Level 2 Pro ‚Üí Level 3 Qu·∫£n l√Ω ‚Üí Leadership" },
              { goal: "üëâ L√†m trainer", path: "Master chuy√™n ng√†nh ‚Üí Coaching ‚Üí Franchise" },
              { goal: "üëâ ƒê·∫ßu t∆∞ chu·ªói", path: "Level 4 CEO ‚Üí G·ªçi v·ªën ‚Üí Nh∆∞·ª£ng quy·ªÅn" },
              { goal: "üëâ Kh·ªüi nghi·ªáp F&B", path: "Level 1-2 ‚Üí Level 3 Setup ‚Üí Level 4 M·ªü r·ªông" }
            ].map((item, idx) => (
              <div key={idx} className="p-4 bg-white rounded-lg border">
                <h4 className="font-medium mb-2">{item.goal}</h4>
                <p className="text-sm text-muted-foreground">{item.path}</p>
              </div>
            ))}
          </div>
        </div>

        {/* AI Skill Tracker & Support Features */}
        <div className="grid md:grid-cols-2 gap-8">
          <div className="bg-gradient-to-br from-primary to-primary/80 text-white rounded-2xl p-8">
            <h3 className="text-2xl font-bold mb-4">ü§ñ AI Skill Tracker Map</h3>
            <p className="mb-6 text-white/90">
              H·ªá th·ªëng AI th√¥ng minh theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p, ƒë·ªÅ xu·∫•t l·ªô tr√¨nh c√° nh√¢n h√≥a 
              v√† m·ªü kh√≥a module n√¢ng cao ph√π h·ª£p v·ªõi nƒÉng l·ª±c
            </p>
            <div className="grid gap-3">
              {[
                { icon: Trophy, text: "Theo d√µi k·ªπ nƒÉng real-time" },
                { icon: TrendingUp, text: "ƒê·ªÅ xu·∫•t h·ªçc c√° nh√¢n h√≥a" },
                { icon: CheckCircle, text: "M·ªü kh√≥a t·ª± ƒë·ªông theo ti·∫øn ƒë·ªô" }
              ].map((feature, idx) => (
                <div key={idx} className="flex items-center gap-3 bg-white/10 p-3 rounded-lg">
                  <feature.icon className="w-5 h-5" />
                  <span className="text-sm font-medium">{feature.text}</span>
                </div>
              ))}
            </div>
            <Button className="mt-6 bg-white text-primary hover:bg-white/90">
              Kh√°m ph√° AI Tracker
              <ArrowRight className="ml-2 w-4 h-4" />
            </Button>
          </div>

          <div className="space-y-6">
            <h3 className="text-xl font-bold">üß∞ T√çNH NƒÇNG H·ªñ TR·ª¢ K√àM THEO</h3>
            <div className="space-y-4">
              {[
                { icon: "üîç", title: "B·ªô l·ªçc ch·ªçn ng√†nh", desc: "Ch·ªçn kh√≥a h·ªçc theo ng√†nh ‚Äì m·ª•c ti√™u ‚Äì ng√¢n s√°ch" },
                { icon: "üßæ", title: "G·ª£i √Ω l·ªô tr√¨nh c√° nh√¢n h√≥a", desc: "Nh·∫≠p m·ª•c ti√™u ‚Äì h·ªá th·ªëng g·ª£i √Ω g√≥i h·ªçc ph√π h·ª£p" },
                { icon: "üß∞", title: "B·ªô t√†i nguy√™n ƒëi k√®m", desc: "Slide, m·∫´u s·ªï tay, b√†i t·∫≠p, c√¥ng c·ª• th·ª±c h√†nh" },
                { icon: "üéØ", title: "Huy hi·ªáu ‚Äì ch·ª©ng ch·ªâ", desc: "Badge ‚Äì gi·∫•y ch·ª©ng nh·∫≠n ‚Äì QR x√°c th·ª±c" },
                { icon: "üì¶", title: "G√≥i combo ti·∫øt ki·ªám", desc: "ƒêƒÉng k√Ω 2+ kh√≥a gi·∫£m 10‚Äì20% + qu√† t·∫∑ng SOP" }
              ].map((feature, idx) => (
                <div key={idx} className="flex gap-4 p-4 bg-card rounded-lg border">
                  <div className="text-2xl">{feature.icon}</div>
                  <div>
                    <h4 className="font-medium mb-1">{feature.title}</h4>
                    <p className="text-sm text-muted-foreground">{feature.desc}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};