import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Phone, Mail, MessageSquare, Clock, CheckCircle, Users, Star } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

export const ConsultationCTA = () => {
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    email: "",
    interest: "",
    experience: "",
    message: ""
  });
  const { toast } = useToast();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Validate required fields
    if (!formData.name || !formData.phone || !formData.interest) {
      toast({
        title: "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin",
        description: "H·ªç t√™n, s·ªë ƒëi·ªán tho·∫°i v√† lƒ©nh v·ª±c quan t√¢m l√† b·∫Øt bu·ªôc",
        variant: "destructive"
      });
      return;
    }

    // Simulate form submission
    toast({
      title: "ƒêƒÉng k√Ω th√†nh c√¥ng! üéâ",
      description: "Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24h",
    });

    // Reset form
    setFormData({
      name: "",
      phone: "",
      email: "",
      interest: "",
      experience: "",
      message: ""
    });
  };

  const benefits = [
    {
      icon: CheckCircle,
      title: "T∆∞ v·∫•n 1:1 mi·ªÖn ph√≠", 
      desc: "30 ph√∫t t∆∞ v·∫•n c√° nh√¢n v·ªõi chuy√™n gia"
    },
    {
      icon: Users,
      title: "L·ªô tr√¨nh c√° nh√¢n h√≥a",
      desc: "Thi·∫øt k·∫ø l·ªô tr√¨nh ph√π h·ª£p v·ªõi m·ª•c ti√™u"
    },
    {
      icon: Star,
      title: "∆Øu ƒë√£i ƒë·∫∑c bi·ªát",
      desc: "Gi·∫£m 20% h·ªçc ph√≠ khi ƒëƒÉng k√Ω trong th√°ng"
    }
  ];

  const testimonials = [
    {
      name: "Nguy·ªÖn Minh Anh",
      role: "Barista t·∫°i The Coffee House",
      content: "T∆∞ v·∫•n r·∫•t chuy√™n nghi·ªáp, gi√∫p m√¨nh ch·ªçn ƒë√∫ng kh√≥a h·ªçc ph√π h·ª£p!",
      rating: 5
    },
    {
      name: "Tr·∫ßn Ho√†ng Nam", 
      role: "Ch·ªß qu√°n Bistro",
      content: "Sau kh√≥a Master, doanh thu qu√°n tƒÉng 40% trong 6 th√°ng ƒë·∫ßu.",
      rating: 5
    }
  ];

  return (
    <section className="py-16 bg-gradient-hero text-white relative overflow-hidden">
      {/* Background decoration */}
      <div className="absolute inset-0 opacity-10">
        <div className="absolute top-10 left-10 w-20 h-20 bg-primary rounded-full blur-xl"></div>
        <div className="absolute bottom-20 right-20 w-32 h-32 bg-accent rounded-full blur-xl"></div>
      </div>

      <div className="container px-4 md:px-6 relative z-10">
        <div className="grid lg:grid-cols-2 gap-12 items-start">
          {/* Left Column - Content */}
          <div className="space-y-8">
            <div>
              <h2 className="text-3xl md:text-4xl font-bold mb-4 leading-relaxed">
                ƒêƒÉng k√Ω t∆∞ v·∫•n mi·ªÖn ph√≠
                <span className="block text-primary">T√¨m l·ªô tr√¨nh ph√π h·ª£p v·ªõi b·∫°n</span>
              </h2>
              <p className="text-xl text-gray-200 mb-6">
                ƒê·ªÉ l·∫°i th√¥ng tin, chuy√™n gia F&B s·∫Ω t∆∞ v·∫•n chi ti·∫øt v·ªÅ 
                kh√≥a h·ªçc v√† c∆° h·ªôi ngh·ªÅ nghi·ªáp trong ng√†nh
              </p>
            </div>

            {/* Benefits */}
            <div className="space-y-4">
              {benefits.map((benefit) => {
                const IconComponent = benefit.icon;
                return (
                  <div key={benefit.title} className="flex items-start gap-4">
                    <div className="flex-shrink-0 w-10 h-10 bg-primary/20 rounded-lg flex items-center justify-center">
                      <IconComponent className="w-5 h-5 text-primary" />
                    </div>
                    <div>
                      <h3 className="font-semibold text-lg">{benefit.title}</h3>
                      <p className="text-gray-300">{benefit.desc}</p>
                    </div>
                  </div>
                );
              })}
            </div>

            {/* Contact Info */}
            <div className="grid md:grid-cols-2 gap-4">
              <div className="flex items-center gap-3 bg-white/10 p-4 rounded-lg">
                <Phone className="w-5 h-5 text-primary" />
                <div>
                  <div className="font-medium">Hotline 24/7</div>
                  <div className="text-sm text-gray-300">1900 2024</div>
                </div>
              </div>
              <div className="flex items-center gap-3 bg-white/10 p-4 rounded-lg">
                <MessageSquare className="w-5 h-5 text-primary" />
                <div>
                  <div className="font-medium">Chat t∆∞ v·∫•n</div>
                  <div className="text-sm text-gray-300">8:00 - 22:00</div>
                </div>
              </div>
            </div>

            {/* Testimonials */}
            <div className="space-y-4">
              <h3 className="font-semibold text-lg">H·ªçc vi√™n n√≥i g√¨ v·ªÅ ch√∫ng t√¥i:</h3>
              {testimonials.map((testimonial) => (
                <div key={testimonial.name} className="bg-white/10 p-4 rounded-lg backdrop-blur-sm">
                  <div className="flex items-center gap-2 mb-2">
                    <div className="flex items-center gap-1">
                      {[...Array(testimonial.rating)].map((_, i) => (
                        <Star key={i} className="w-4 h-4 fill-yellow-400 text-yellow-400" />
                      ))}
                    </div>
                    <span className="text-sm font-medium">{testimonial.name}</span>
                    <Badge variant="secondary" className="text-xs">{testimonial.role}</Badge>
                  </div>
                  <p className="text-sm text-gray-300">"{testimonial.content}"</p>
                </div>
              ))}
            </div>
          </div>

          {/* Right Column - Form */}
          <Card className="border-0 shadow-elevated">
            <CardHeader>
              <CardTitle className="text-2xl text-center">
                Nh·∫≠n t∆∞ v·∫•n ngay
              </CardTitle>
              <CardDescription className="text-center">
                Ch·ªâ m·∫•t 2 ph√∫t ƒë·ªÉ ƒëi·ªÅn form, nh·∫≠n t∆∞ v·∫•n chi ti·∫øt trong 24h
              </CardDescription>
            </CardHeader>
            <CardContent>
              <form onSubmit={handleSubmit} className="space-y-4">
                <div className="grid md:grid-cols-2 gap-4">
                  <div>
                    <Input
                      placeholder="H·ªç v√† t√™n *"
                      value={formData.name}
                      onChange={(e) => setFormData({...formData, name: e.target.value})}
                      required
                    />
                  </div>
                  <div>
                    <Input
                      type="tel"
                      placeholder="S·ªë ƒëi·ªán tho·∫°i *"
                      value={formData.phone}
                      onChange={(e) => setFormData({...formData, phone: e.target.value})}
                      required
                    />
                  </div>
                </div>

                <Input
                  type="email"
                  placeholder="Email"
                  value={formData.email}
                  onChange={(e) => setFormData({...formData, email: e.target.value})}
                />

                <Select onValueChange={(value) => setFormData({...formData, interest: value})}>
                  <SelectTrigger>
                    <SelectValue placeholder="Lƒ©nh v·ª±c quan t√¢m *" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="barista">Barista & Coffee</SelectItem>
                    <SelectItem value="chef">Chef & Culinary</SelectItem>
                    <SelectItem value="bartender">Bartender & Mixology</SelectItem>
                    <SelectItem value="management">Qu·∫£n l√Ω F&B</SelectItem>
                    <SelectItem value="business">Kinh doanh F&B</SelectItem>
                    <SelectItem value="other">Kh√°c</SelectItem>
                  </SelectContent>
                </Select>

                <Select onValueChange={(value) => setFormData({...formData, experience: value})}>
                  <SelectTrigger>
                    <SelectValue placeholder="Kinh nghi·ªám hi·ªán t·∫°i" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="none">Ch∆∞a c√≥ kinh nghi·ªám</SelectItem>
                    <SelectItem value="basic">D∆∞·ªõi 1 nƒÉm</SelectItem>
                    <SelectItem value="intermediate">1-3 nƒÉm</SelectItem>
                    <SelectItem value="advanced">Tr√™n 3 nƒÉm</SelectItem>
                    <SelectItem value="expert">Chuy√™n gia (5+ nƒÉm)</SelectItem>
                  </SelectContent>
                </Select>

                <Textarea
                  placeholder="M·ª•c ti√™u h·ªçc t·∫≠p c·ªßa b·∫°n..."
                  value={formData.message}
                  onChange={(e) => setFormData({...formData, message: e.target.value})}
                  rows={3}
                />

                <Button type="submit" className="w-full bg-gradient-accent text-white hover:scale-105 transition-transform">
                  <Clock className="mr-2 w-4 h-4" />
                  Nh·∫≠n t∆∞ v·∫•n mi·ªÖn ph√≠
                </Button>

                <p className="text-xs text-center text-muted-foreground">
                  B·∫±ng vi·ªác ƒëƒÉng k√Ω, b·∫°n ƒë·ªìng √Ω v·ªõi 
                  <a href="#" className="text-primary hover:underline"> ƒêi·ªÅu kho·∫£n </a> 
                  v√† 
                  <a href="#" className="text-primary hover:underline"> Ch√≠nh s√°ch b·∫£o m·∫≠t</a>
                </p>
              </form>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
};